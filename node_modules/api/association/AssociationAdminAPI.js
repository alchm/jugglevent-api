if (typeof define !== 'function') {
    var define = require('amdefine')(module);
}

define([
    'mongoose',
    'async'
], function (mongoose, async) {

    var exports     = {},
        User        = mongoose.model('User'),
        Association = mongoose.model('Association');

    exports.getById = function (aId, userId, done) {
        var aId,
            userId;
        Association.findOne({ _id: aId })
            .populate({ path: 'admins',
                        match: { _id: userId } })
            .exec( function (err, data) { // TODO: a OR a.user ?
                if (!err) {
                    if (data) done(null, data);
                    else done(new Error('No result'), null);
                } else done(err, null);
            });
    };

    exports.addById = function (aId, userId, done) {
        async.parallel([
            function (callback) {
                Association.findOne({ _id: aId }, 'admins', function (err, a) {
                    if (!err) callback(null, a);
                    else callback(err, null);
                });
            },
            function (callback) {
                User.findOne({ _id: userId }, '_id', function (err, user) {
                    if (!err) callback(null, user);
                    else callback(err, null);
                });
            }
        ], function (err, results) {
            if (!err) {
                if (results) {
                    var a       = results[0],
                        user    = results[1];
                    a.admins.push( user );
                    user.save( function (err) {
                        if (!err) done(null, a);
                        else done(err, null);
                    });
                } else done(new Error('No result'), null);
            } else done(err, null);
        });
    };

    exports.removeById = function (aId, userId, done) {
        async.parallel([
            function (callback) {
                Association.findOne({ _id: aId }, 'admins', function (err, a) {
                    if (!err) callback(null, a);
                    else callback(err, null);
                });
            },
            function (callback) {
                User.findOne({ _id: userId }, '_id', function (err, user) {
                    if (!err) callback(null, user);
                    else callback(err, null);
                });
            }
        ], function (err, results) {
            if (!err) {
                if (results) {
                    var a       = results[0],
                        user    = results[1];
                } else done(new Error('No result'), null);
            } else done(err, null);
        });
    };

});